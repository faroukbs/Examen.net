// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TE.Data;

#nullable disable

namespace TE.Data.Migrations
{
    [DbContext(typeof(TEContext))]
    [Migration("20230524232212_tf")]
    partial class tf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TE.Core.Domain.Member", b =>
                {
                    b.Property<string>("Matricule")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Matricule");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("TE.Core.Domain.Projet", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Code");

                    b.ToTable("Projet");
                });

            modelBuilder.Entity("TE.Core.Domain.Sprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjetCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetCode");

                    b.ToTable("Sprint");
                });

            modelBuilder.Entity("TE.Core.Domain.Tache", b =>
                {
                    b.Property<int>("SprintKey")
                        .HasColumnType("int");

                    b.Property<string>("MemberKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Titre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.HasKey("SprintKey", "MemberKey", "Titre");

                    b.HasIndex("MemberKey");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("TE.Core.Domain.Sprint", b =>
                {
                    b.HasOne("TE.Core.Domain.Projet", "Projet")
                        .WithMany("Sprints")
                        .HasForeignKey("ProjetCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("TE.Core.Domain.Tache", b =>
                {
                    b.HasOne("TE.Core.Domain.Member", "Member")
                        .WithMany("Taches")
                        .HasForeignKey("MemberKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TE.Core.Domain.Sprint", "Sprint")
                        .WithMany("Taches")
                        .HasForeignKey("SprintKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("TE.Core.Domain.Member", b =>
                {
                    b.Navigation("Taches");
                });

            modelBuilder.Entity("TE.Core.Domain.Projet", b =>
                {
                    b.Navigation("Sprints");
                });

            modelBuilder.Entity("TE.Core.Domain.Sprint", b =>
                {
                    b.Navigation("Taches");
                });
#pragma warning restore 612, 618
        }
    }
}
